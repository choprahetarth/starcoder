Running "module reset". Resetting modules to system default. The following $MODULEPATH directories have been removed: None
Starting the evaluation process...
2024-07-11 11:05:48,759	INFO worker.py:1770 -- Started a local Ray instance.
starting...
INFO 07-11 11:05:51 config.py:623] Defaulting to use mp for distributed inference
INFO 07-11 11:05:51 llm_engine.py:161] Initializing an LLM engine (v0.5.0.post1) with config: model='/scratch/bbvz/choprahetarth/merged_models/question_1/starcoder2-15B/dare_ties', speculative_config=None, tokenizer='/scratch/bbvz/choprahetarth/merged_models/question_1/starcoder2-15B/dare_ties', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=16384, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=4, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), seed=0, served_model_name=/scratch/bbvz/choprahetarth/merged_models/question_1/starcoder2-15B/dare_ties)
INFO 07-11 11:05:53 selector.py:150] Cannot use FlashAttention-2 backend due to sliding window.
INFO 07-11 11:05:53 selector.py:51] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:02 selector.py:150] Cannot use FlashAttention-2 backend due to sliding window.
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:02 selector.py:51] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:03 selector.py:150] Cannot use FlashAttention-2 backend due to sliding window.
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:03 selector.py:51] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:03 selector.py:150] Cannot use FlashAttention-2 backend due to sliding window.
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:03 selector.py:51] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:03 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:03 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:03 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
INFO 07-11 11:06:03 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:03 utils.py:637] Found nccl from library libnccl.so.2
INFO 07-11 11:06:03 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:03 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:03 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:03 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:03 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:03 pynccl.py:63] vLLM is using nccl==2.20.5
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_ebde8071'
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_ebde8071'
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_ebde8071'
[1;36m(VllmWorkerProcess pid=1503914)[0;0m WARNING 07-11 11:06:05 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=1503912)[0;0m WARNING 07-11 11:06:05 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=1503913)[0;0m WARNING 07-11 11:06:05 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
WARNING 07-11 11:06:05 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:07 selector.py:150] Cannot use FlashAttention-2 backend due to sliding window.
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:07 selector.py:51] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:07 selector.py:150] Cannot use FlashAttention-2 backend due to sliding window.
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:07 selector.py:51] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:07 selector.py:150] Cannot use FlashAttention-2 backend due to sliding window.
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:07 selector.py:51] Using XFormers backend.
INFO 07-11 11:06:07 selector.py:150] Cannot use FlashAttention-2 backend due to sliding window.
INFO 07-11 11:06:07 selector.py:51] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:37 model_runner.py:160] Loading model weights took 7.4760 GB
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:37 model_runner.py:160] Loading model weights took 7.4760 GB
INFO 07-11 11:06:37 model_runner.py:160] Loading model weights took 7.4760 GB
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:42 model_runner.py:160] Loading model weights took 7.4760 GB
INFO 07-11 11:06:54 distributed_gpu_executor.py:56] # GPU blocks: 79164, # CPU blocks: 13107
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:57 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:57 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:57 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:06:57 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 07-11 11:06:57 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:06:57 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:06:57 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 07-11 11:06:57 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 07-11 11:08:16 model_runner.py:965] Graph capturing finished in 79 secs.
[1;36m(VllmWorkerProcess pid=1503912)[0;0m INFO 07-11 11:08:16 model_runner.py:965] Graph capturing finished in 79 secs.
[1;36m(VllmWorkerProcess pid=1503913)[0;0m INFO 07-11 11:08:16 model_runner.py:965] Graph capturing finished in 79 secs.
[1;36m(VllmWorkerProcess pid=1503914)[0;0m INFO 07-11 11:08:17 model_runner.py:965] Graph capturing finished in 79 secs.
Time taken to load model:  154.09780406951904
Loading dataset...
Dataset loaded and shuffled successfully.
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:02<00:00,  2.42s/it]100%|██████████| 1/1 [00:02<00:00,  2.42s/it]
Processed prompts:   0%|          | 0/1646 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:   0%|          | 1/1646 [00:06<2:56:45,  6.45s/it, est. speed input: 2.17 toks/s, output: 2.48 toks/s]Processed prompts:  16%|█▌        | 257/1646 [00:08<00:35, 38.71it/s, est. speed input: 531.00 toks/s, output: 480.10 toks/s]Processed prompts:  31%|███       | 513/1646 [00:10<00:17, 66.62it/s, est. speed input: 863.00 toks/s, output: 784.44 toks/s]Processed prompts:  47%|████▋     | 769/1646 [00:12<00:10, 84.79it/s, est. speed input: 1092.12 toks/s, output: 984.21 toks/s]Processed prompts:  62%|██████▏   | 1025/1646 [00:14<00:05, 103.61it/s, est. speed input: 1281.28 toks/s, output: 1160.34 toks/s]Processed prompts:  63%|██████▎   | 1038/1646 [00:14<00:06, 97.72it/s, est. speed input: 1261.72 toks/s, output: 1142.92 toks/s] Processed prompts:  78%|███████▊  | 1281/1646 [00:16<00:03, 114.30it/s, est. speed input: 1396.57 toks/s, output: 1267.43 toks/s]Processed prompts:  79%|███████▊  | 1293/1646 [00:16<00:03, 109.59it/s, est. speed input: 1387.28 toks/s, output: 1259.09 toks/s]Processed prompts:  93%|█████████▎| 1537/1646 [00:17<00:00, 152.91it/s, est. speed input: 1568.94 toks/s, output: 1422.93 toks/s]Processed prompts:  94%|█████████▍| 1553/1646 [00:17<00:00, 151.34it/s, est. speed input: 1572.87 toks/s, output: 1426.93 toks/s]Processed prompts: 100%|██████████| 1646/1646 [00:17<00:00, 94.53it/s, est. speed input: 1668.17 toks/s, output: 1512.25 toks/s] 
  0%|          | 0/1 [00:00<?, ?it/s]/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 4-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 3-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 2-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 2-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 3-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 4-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
100%|██████████| 1/1 [00:35<00:00, 35.17s/it]100%|██████████| 1/1 [00:35<00:00, 35.17s/it]
Time taken for the script to run: 211.73290276527405 seconds
INFO 07-11 11:09:19 multiproc_worker_utils.py:123] Killing local vLLM worker processes
