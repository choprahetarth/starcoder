Running "module reset". Resetting modules to system default. The following $MODULEPATH directories have been removed: None
Starting the evaluation process...
2024-07-12 14:23:04,162	INFO worker.py:1770 -- Started a local Ray instance.
starting...
INFO 07-12 14:23:09 config.py:623] Defaulting to use mp for distributed inference
INFO 07-12 14:23:09 llm_engine.py:161] Initializing an LLM engine (v0.5.0.post1) with config: model='/scratch/bbvz/choprahetarth/merged_models/question_2/codellama-13b-hf/ties', speculative_config=None, tokenizer='/scratch/bbvz/choprahetarth/merged_models/question_2/codellama-13b-hf/ties', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=16384, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=4, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), seed=0, served_model_name=/scratch/bbvz/choprahetarth/merged_models/question_2/codellama-13b-hf/ties)
[1;36m(VllmWorkerProcess pid=2549651)[0;0m INFO 07-12 14:23:22 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=2549650)[0;0m INFO 07-12 14:23:22 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=2549652)[0;0m INFO 07-12 14:23:22 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
INFO 07-12 14:23:22 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=2549650)[0;0m INFO 07-12 14:23:22 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=2549651)[0;0m INFO 07-12 14:23:22 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=2549652)[0;0m INFO 07-12 14:23:22 utils.py:637] Found nccl from library libnccl.so.2
INFO 07-12 14:23:22 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=2549650)[0;0m INFO 07-12 14:23:22 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=2549651)[0;0m INFO 07-12 14:23:22 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=2549652)[0;0m INFO 07-12 14:23:22 pynccl.py:63] vLLM is using nccl==2.20.5
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_3b7ef049'
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_3b7ef049'
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_3b7ef049'
WARNING 07-12 14:23:24 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=2549651)[0;0m WARNING 07-12 14:23:24 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=2549652)[0;0m WARNING 07-12 14:23:24 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=2549650)[0;0m WARNING 07-12 14:23:24 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=2549652)[0;0m INFO 07-12 14:23:49 model_runner.py:160] Loading model weights took 6.1146 GB
[1;36m(VllmWorkerProcess pid=2549651)[0;0m INFO 07-12 14:23:49 model_runner.py:160] Loading model weights took 6.1146 GB
[1;36m(VllmWorkerProcess pid=2549650)[0;0m INFO 07-12 14:23:49 model_runner.py:160] Loading model weights took 6.1146 GB
INFO 07-12 14:23:49 model_runner.py:160] Loading model weights took 6.1146 GB
INFO 07-12 14:23:59 distributed_gpu_executor.py:56] # GPU blocks: 8425, # CPU blocks: 1310
INFO 07-12 14:24:02 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 07-12 14:24:02 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=2549652)[0;0m INFO 07-12 14:24:03 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=2549652)[0;0m INFO 07-12 14:24:03 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=2549650)[0;0m INFO 07-12 14:24:03 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=2549650)[0;0m INFO 07-12 14:24:03 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=2549651)[0;0m INFO 07-12 14:24:04 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=2549651)[0;0m INFO 07-12 14:24:04 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=2549652)[0;0m INFO 07-12 14:24:36 model_runner.py:965] Graph capturing finished in 33 secs.
[1;36m(VllmWorkerProcess pid=2549650)[0;0m INFO 07-12 14:24:36 model_runner.py:965] Graph capturing finished in 33 secs.
[1;36m(VllmWorkerProcess pid=2549651)[0;0m INFO 07-12 14:24:36 model_runner.py:965] Graph capturing finished in 33 secs.
INFO 07-12 14:24:36 model_runner.py:965] Graph capturing finished in 34 secs.
Time taken to load model:  98.10211610794067
Loading dataset...
Dataset loaded and shuffled successfully.

  0%|          | 0/1 [00:00<?, ?it/s]
100%|██████████| 1/1 [00:04<00:00,  4.83s/it]
100%|██████████| 1/1 [00:04<00:00,  4.85s/it]

Processed prompts:   0%|          | 0/1646 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts:   0%|          | 1/1646 [00:03<1:34:51,  3.46s/it, est. speed input: 4.62 toks/s, output: 4.62 toks/s]
Processed prompts:  16%|█▌        | 257/1646 [00:05<00:23, 59.44it/s, est. speed input: 981.96 toks/s, output: 767.64 toks/s]
Processed prompts:  31%|███       | 513/1646 [00:07<00:12, 91.65it/s, est. speed input: 1477.15 toks/s, output: 1158.13 toks/s]
Processed prompts:  47%|████▋     | 769/1646 [00:09<00:08, 107.03it/s, est. speed input: 1755.13 toks/s, output: 1366.95 toks/s]
Processed prompts:  62%|██████▏   | 1025/1646 [00:10<00:04, 126.88it/s, est. speed input: 2009.04 toks/s, output: 1569.78 toks/s]
Processed prompts:  63%|██████▎   | 1040/1646 [00:10<00:05, 120.92it/s, est. speed input: 1979.65 toks/s, output: 1547.83 toks/s]
Processed prompts:  78%|███████▊  | 1281/1646 [00:12<00:02, 131.61it/s, est. speed input: 2118.42 toks/s, output: 1658.15 toks/s]
Processed prompts:  79%|███████▊  | 1294/1646 [00:12<00:02, 123.65it/s, est. speed input: 2088.89 toks/s, output: 1635.27 toks/s]
Processed prompts:  93%|█████████▎| 1537/1646 [00:13<00:00, 163.52it/s, est. speed input: 2314.87 toks/s, output: 1811.11 toks/s]
Processed prompts:  94%|█████████▍| 1552/1646 [00:13<00:00, 159.19it/s, est. speed input: 2310.19 toks/s, output: 1808.00 toks/s]
Processed prompts: 100%|██████████| 1646/1646 [00:13<00:00, 119.87it/s, est. speed input: 2451.34 toks/s, output: 1917.32 toks/s]

  0%|          | 0/1 [00:00<?, ?it/s]/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 4-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 3-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 2-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 2-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 3-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 4-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)

100%|██████████| 1/1 [00:37<00:00, 37.60s/it]
100%|██████████| 1/1 [00:37<00:00, 37.60s/it]
Time taken for the script to run: 157.4844720363617 seconds
ERROR 07-12 14:25:41 multiproc_worker_utils.py:120] Worker VllmWorkerProcess pid 2549652 died, exit code: -15
INFO 07-12 14:25:41 multiproc_worker_utils.py:123] Killing local vLLM worker processes


models:
  - model : //scratch/bbvz/choprahetarth/starcoder2_script/codellama-13b-hf/final_checkpoint_merged
    parameters:
      density: 0.5 # density gradient
      weight: 1
  - model: meta-llama/CodeLlama-13b-Python-hf
    parameters:
      density: 0.5
      weight: 1 # weight gradient
tokenizer_source: union
merge_method: ties
base_model: meta-llama/CodeLlama-13b-Python-hf
parameters:
  normalize: true
  int8_mask: true
dtype: float16

srun --account=bbvz-delta-gpu python3 /u/choprahetarth/all_files/model_merging/merger.py \
--output_path "//scratch/bbvz/choprahetarth/merged_models/question_2/codellama-13b-hf/ties" \
--config_yml "/u/choprahetarth/all_files/model_merging/mergekit/examples/codellama.yml" \
--copy_tokenizer True \
--lazy_unpickle True \
--low_cpu_memory True \
--trust_remote_code True \
--allow_crimes True
