Running "module reset". Resetting modules to system default. The following $MODULEPATH directories have been removed: None
Starting the evaluation process...
2024-07-12 13:55:31,423	INFO worker.py:1770 -- Started a local Ray instance.
starting...
INFO 07-12 13:55:37 config.py:623] Defaulting to use mp for distributed inference
INFO 07-12 13:55:37 llm_engine.py:161] Initializing an LLM engine (v0.5.0.post1) with config: model='/scratch/bbvz/choprahetarth/merged_models/question_2/codellama-7b-hf/dare_ties', speculative_config=None, tokenizer='/scratch/bbvz/choprahetarth/merged_models/question_2/codellama-7b-hf/dare_ties', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=16384, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=4, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), seed=0, served_model_name=/scratch/bbvz/choprahetarth/merged_models/question_2/codellama-7b-hf/dare_ties)
[1;36m(VllmWorkerProcess pid=524113)[0;0m INFO 07-12 13:55:49 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=524115)[0;0m INFO 07-12 13:55:50 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=524114)[0;0m INFO 07-12 13:55:50 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
INFO 07-12 13:55:50 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=524113)[0;0m INFO 07-12 13:55:50 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=524115)[0;0m INFO 07-12 13:55:50 utils.py:637] Found nccl from library libnccl.so.2
INFO 07-12 13:55:50 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=524114)[0;0m INFO 07-12 13:55:50 utils.py:637] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=524113)[0;0m INFO 07-12 13:55:50 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=524115)[0;0m INFO 07-12 13:55:50 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=524114)[0;0m INFO 07-12 13:55:50 pynccl.py:63] vLLM is using nccl==2.20.5
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_ec44f3a6'
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_ec44f3a6'
Traceback (most recent call last):
  File "/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/multiprocessing/resource_tracker.py", line 209, in main
    cache[rtype].remove(name)
KeyError: '/psm_ec44f3a6'
[1;36m(VllmWorkerProcess pid=524113)[0;0m WARNING 07-12 13:55:52 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=524115)[0;0m WARNING 07-12 13:55:52 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
WARNING 07-12 13:55:52 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=524114)[0;0m WARNING 07-12 13:55:52 custom_all_reduce.py:166] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=524115)[0;0m INFO 07-12 13:56:11 model_runner.py:160] Loading model weights took 3.1892 GB
INFO 07-12 13:56:11 model_runner.py:160] Loading model weights took 3.1899 GB
[1;36m(VllmWorkerProcess pid=524113)[0;0m INFO 07-12 13:56:11 model_runner.py:160] Loading model weights took 3.1892 GB
[1;36m(VllmWorkerProcess pid=524114)[0;0m INFO 07-12 13:56:11 model_runner.py:160] Loading model weights took 3.1892 GB
INFO 07-12 13:56:20 distributed_gpu_executor.py:56] # GPU blocks: 14771, # CPU blocks: 2048
[1;36m(VllmWorkerProcess pid=524114)[0;0m INFO 07-12 13:56:22 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=524114)[0;0m INFO 07-12 13:56:22 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=524113)[0;0m INFO 07-12 13:56:22 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=524113)[0;0m INFO 07-12 13:56:22 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=524115)[0;0m INFO 07-12 13:56:22 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=524115)[0;0m INFO 07-12 13:56:22 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 07-12 13:56:22 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 07-12 13:56:22 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=524115)[0;0m INFO 07-12 13:56:42 model_runner.py:965] Graph capturing finished in 20 secs.
[1;36m(VllmWorkerProcess pid=524113)[0;0m INFO 07-12 13:56:42 model_runner.py:965] Graph capturing finished in 20 secs.
INFO 07-12 13:56:42 model_runner.py:965] Graph capturing finished in 20 secs.
[1;36m(VllmWorkerProcess pid=524114)[0;0m INFO 07-12 13:56:42 model_runner.py:965] Graph capturing finished in 20 secs.
Time taken to load model:  76.51250743865967
Loading dataset...
Dataset loaded and shuffled successfully.
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:01<00:00,  1.08s/it]100%|██████████| 1/1 [00:01<00:00,  1.10s/it]
Processed prompts:   0%|          | 0/1646 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:   0%|          | 1/1646 [00:01<35:46,  1.31s/it, est. speed input: 12.26 toks/s, output: 12.26 toks/s]Processed prompts:  16%|█▌        | 257/1646 [00:02<00:12, 110.29it/s, est. speed input: 1934.50 toks/s, output: 1512.28 toks/s]Processed prompts:  31%|███       | 513/1646 [00:03<00:07, 155.79it/s, est. speed input: 2693.74 toks/s, output: 2111.96 toks/s]Processed prompts:  47%|████▋     | 769/1646 [00:05<00:05, 172.22it/s, est. speed input: 3046.19 toks/s, output: 2372.46 toks/s]Processed prompts:  62%|██████▏   | 1025/1646 [00:06<00:03, 188.57it/s, est. speed input: 3305.87 toks/s, output: 2584.30 toks/s]Processed prompts:  78%|███████▊  | 1281/1646 [00:07<00:01, 190.46it/s, est. speed input: 3414.29 toks/s, output: 2673.51 toks/s]Processed prompts:  93%|█████████▎| 1537/1646 [00:08<00:00, 232.89it/s, est. speed input: 3790.34 toks/s, output: 2966.45 toks/s]Processed prompts: 100%|██████████| 1646/1646 [00:08<00:00, 198.50it/s, est. speed input: 4059.45 toks/s, output: 3176.07 toks/s]
  0%|          | 0/1 [00:00<?, ?it/s]/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 3-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 4-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/nltk/translate/bleu_score.py:552: UserWarning: 
The hypothesis contains 0 counts of 2-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 2-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 3-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
/u/choprahetarth/.conda/envs/scoder_2/lib/python3.10/site-packages/crystalbleu.py:565: UserWarning: 
The hypothesis contains 0 counts of 4-gram overlaps.
Therefore the BLEU score evaluates to 0, independently of
how many N-gram overlaps of lower order it contains.
Consider using lower n-gram order or use SmoothingFunction()
  warnings.warn(_msg)
100%|██████████| 1/1 [00:38<00:00, 38.08s/it]100%|██████████| 1/1 [00:38<00:00, 38.08s/it]
Time taken for the script to run: 125.05614805221558 seconds
ERROR 07-12 13:57:33 multiproc_worker_utils.py:120] Worker VllmWorkerProcess pid 524115 died, exit code: -15
INFO 07-12 13:57:33 multiproc_worker_utils.py:123] Killing local vLLM worker processes
